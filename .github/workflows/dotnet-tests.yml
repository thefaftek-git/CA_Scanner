name: .NET Tests and Coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet --version && dotnet restore
      
    - name: Build
      run: dotnet --version && dotnet build --no-restore
    
    - name: Specific Debugging
      env:
        AZURE_TENANT_ID: ${{ secrets.Azure_Tenant_Id }}
        AZURE_CLIENT_ID: ${{ secrets.Azure_Client_Id }}
        AZURE_CLIENT_SECRET: ${{ secrets.Azure_Client_Secret }}
      run: dotnet test --filter "FullyQualifiedName~Export_Command_ValidArgs_CallsHandler" --logger "console;verbosity=detailed"
      
    - name: Test with coverage
      id: tests
      env:
        AZURE_TENANT_ID: ${{ secrets.Azure_Tenant_Id }}
        AZURE_CLIENT_ID: ${{ secrets.Azure_Client_Id }}
        AZURE_CLIENT_SECRET: ${{ secrets.Azure_Client_Secret }}
      run: "dotnet --version && dotnet test --no-build --verbosity normal --collect:\"XPlat Code Coverage\" --logger \"console;verbosity=detailed\" --nologo"
      
    - name: Generate code coverage report
      if: success()
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
      with:
        reports: '**/coverage.opencover.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
        
    - name: Upload coverage report artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport
        path: coveragereport
        
    - name: Publish coverage report to GitHub Pages
      if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: coveragereport
        branch: gh-pages
        clean: true