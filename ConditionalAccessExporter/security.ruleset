<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="CA_Scanner Security Rules" Description="Custom security ruleset for CA_Scanner project" ToolsVersion="17.0">
  <!-- Include all recommended rules -->
  <Include Path="minimumrecommendedrules.ruleset" Action="Default" />

  <!-- Enable specific security-related rules -->
  <Rules AnalyzerId="Microsoft.CodeAnalysis.NetAnalyzers" RuleNamespace="Microsoft.CodeAnalysis.NetAnalyzers">
    <!-- Security Rules -->
    <Rule Id="CA1001" Action="Warning" /> <!-- Types that own disposable fields should be disposable -->

    <Rule Id="CA1054" Action="Warning" /> <!-- URI parameters should not be strings -->
    <Rule Id="CA1055" Action="Warning" /> <!-- URI return values should not be strings -->
    <Rule Id="CA1056" Action="Warning" /> <!-- URI properties should not be strings -->
    <Rule Id="CA1303" Action="None" />   <!-- Do not pass literals as localized parameters -->



    <Rule Id="CA1309" Action="Warning" /> <!-- Use ordinal StringComparison -->
    <Rule Id="CA1707" Action="Warning" /> <!-- Identifiers should not contain underscores -->
    <Rule Id="CA1720" Action="Warning" /> <!-- Identifier contains type name -->
    <Rule Id="CA1801" Action="Warning" /> <!-- Review unused parameters -->
    <Rule Id="CA1806" Action="Warning" /> <!-- Do not ignore method results -->
    <Rule Id="CA1810" Action="Warning" /> <!-- Initialize reference type static fields inline -->
    <Rule Id="CA1812" Action="Warning" /> <!-- Avoid uninstantiated internal classes -->
    <Rule Id="CA1813" Action="Warning" /> <!-- Avoid unsealed attributes -->
    <Rule Id="CA1815" Action="Warning" /> <!-- Override equals and operator equals on value types -->
    <Rule Id="CA1819" Action="Warning" /> <!-- Properties should not return arrays -->

    <Rule Id="CA1823" Action="Warning" /> <!-- Avoid unused private fields -->
    <Rule Id="CA2000" Action="Warning" /> <!-- Dispose objects before losing scope -->
    <Rule Id="CA2002" Action="Warning" /> <!-- Do not lock on objects with weak identity -->

    <Rule Id="CA2100" Action="Warning" /> <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2101" Action="Warning" /> <!-- Specify marshaling for P/Invoke string arguments -->
    <Rule Id="CA2109" Action="Warning" /> <!-- Review visible event handlers -->
    <Rule Id="CA2200" Action="Warning" /> <!-- Rethrow to preserve stack details -->
    <Rule Id="CA2201" Action="Warning" /> <!-- Do not raise reserved exception types -->
    <Rule Id="CA2208" Action="Warning" /> <!-- Instantiate argument exceptions correctly -->
    <Rule Id="CA2211" Action="Warning" /> <!-- Non-constant fields should not be visible -->
    <Rule Id="CA2213" Action="Warning" /> <!-- Disposable fields should be disposed -->
    <Rule Id="CA2214" Action="Warning" /> <!-- Do not call overridable methods in constructors -->
    <Rule Id="CA2215" Action="Warning" /> <!-- Dispose methods should call base class dispose -->
    <Rule Id="CA2216" Action="Warning" /> <!-- Disposable types should declare finalizer -->
    <Rule Id="CA2217" Action="Warning" /> <!-- Do not mark enums with FlagsAttribute -->
    <Rule Id="CA2219" Action="Warning" /> <!-- Do not raise exceptions in finally clauses -->
    <Rule Id="CA2225" Action="Warning" /> <!-- Operator overloads have named alternates -->
    <Rule Id="CA2226" Action="Warning" /> <!-- Operators should have symmetrical overloads -->
    <Rule Id="CA2227" Action="None" /> <!-- Collection properties should be read only - temporarily disabled for test fix -->
    <Rule Id="CA2007" Action="None" /> <!-- ConfigureAwait - temporarily disabled for test fix -->
    <Rule Id="CA1822" Action="None" /> <!-- Mark members as static - temporarily disabled for test fix -->
    <Rule Id="CA1031" Action="None" /> <!-- Do not catch general exception types - temporarily disabled for test fix -->
    <Rule Id="CA1304" Action="None" /> <!-- Specify culture info - temporarily disabled for test fix -->
    <Rule Id="CA1305" Action="None" /> <!-- Specify IFormatProvider - temporarily disabled for test fix -->
    <Rule Id="CA1307" Action="None" /> <!-- Specify StringComparison - temporarily disabled for test fix -->
    <Rule Id="CA1310" Action="None" /> <!-- Specify StringComparison for clarity - temporarily disabled for test fix -->
    <Rule Id="CA1311" Action="None" /> <!-- Specify culture or use invariant - temporarily disabled for test fix -->
    <Rule Id="CA1805" Action="None" /> <!-- Member explicitly initialized to default - temporarily disabled for test fix -->
    <Rule Id="CA1860" Action="None" /> <!-- Prefer Count to Any() - temporarily disabled for test fix -->
    <Rule Id="CA2229" Action="Warning" /> <!-- Implement serialization constructors -->
    <Rule Id="CA2231" Action="Warning" /> <!-- Overload operator equals on overriding value type Equals -->
    <Rule Id="CA2234" Action="Warning" /> <!-- Pass system uri objects instead of strings -->
    <Rule Id="CA2235" Action="Warning" /> <!-- Mark all non-serializable fields -->
    <Rule Id="CA2237" Action="Warning" /> <!-- Mark ISerializable types with serializable -->
    <Rule Id="CA2241" Action="Warning" /> <!-- Provide correct arguments to formatting methods -->
    <Rule Id="CA2242" Action="Warning" /> <!-- Test for NaN correctly -->
    <Rule Id="CA2243" Action="Warning" /> <!-- Attribute string literals should parse correctly -->
    <Rule Id="CA3001" Action="Warning" /> <!-- Review code for SQL injection vulnerabilities -->
    <Rule Id="CA3002" Action="Warning" /> <!-- Review code for XSS vulnerabilities -->
    <Rule Id="CA3003" Action="Warning" /> <!-- Review code for file path injection vulnerabilities -->
    <Rule Id="CA3004" Action="Warning" /> <!-- Review code for information disclosure vulnerabilities -->
    <Rule Id="CA3005" Action="Warning" /> <!-- Review code for LDAP injection vulnerabilities -->
    <Rule Id="CA3006" Action="Warning" /> <!-- Review code for process command injection vulnerabilities -->
    <Rule Id="CA3007" Action="Warning" /> <!-- Review code for open redirect vulnerabilities -->
    <Rule Id="CA3008" Action="Warning" /> <!-- Review code for XPath injection vulnerabilities -->
    <Rule Id="CA3009" Action="Warning" /> <!-- Review code for XML DTD and XSLT injection vulnerabilities -->
    <Rule Id="CA3010" Action="Warning" /> <!-- Review code for XAML injection vulnerabilities -->
    <Rule Id="CA3011" Action="Warning" /> <!-- Review code for DLL injection vulnerabilities -->
    <Rule Id="CA3012" Action="Warning" /> <!-- Review code for regex injection vulnerabilities -->
    <Rule Id="CA3061" Action="Warning" /> <!-- Do not add schema by URL -->
    <Rule Id="CA3075" Action="Warning" /> <!-- Review DTD processing in XML -->
    <Rule Id="CA3076" Action="Warning" /> <!-- Review insecure XSLT processing -->
    <Rule Id="CA3077" Action="Warning" /> <!-- Review insecure DTD processing in XML -->
    <Rule Id="CA3147" Action="Warning" /> <!-- Mark Verb Handlers With Validate Antiforgery Token -->
    <Rule Id="CA5350" Action="Warning" /> <!-- Do Not Use Weak Cryptographic Algorithms -->
    <Rule Id="CA5351" Action="Warning" /> <!-- Do Not Use Broken Cryptographic Algorithms -->
    <Rule Id="CA5358" Action="Warning" /> <!-- Do Not Use Unsafe Cipher Modes -->
    <Rule Id="CA5359" Action="Warning" /> <!-- Do Not Disable Certificate Validation -->
    <Rule Id="CA5360" Action="Warning" /> <!-- Do Not Call Dangerous Methods In Deserialization -->
    <Rule Id="CA5361" Action="Warning" /> <!-- Do Not Disable SChannel Use of Strong Crypto -->
    <Rule Id="CA5362" Action="Warning" /> <!-- Do Not Refer Self In Deserialization -->
    <Rule Id="CA5363" Action="Warning" /> <!-- Do Not Disable Request Validation -->
    <Rule Id="CA5364" Action="Warning" /> <!-- Do Not Use Deprecated Security Protocols -->
    <Rule Id="CA5365" Action="Warning" /> <!-- Do Not Disable HTTP Header Checking -->
    <Rule Id="CA5366" Action="Warning" /> <!-- Use XmlReader For DataSet ReadXml -->
    <Rule Id="CA5367" Action="Warning" /> <!-- Do Not Serialize Types With Pointer Fields -->
    <Rule Id="CA5368" Action="Warning" /> <!-- Set ViewStateUserKey For Classes Derived From Page -->
    <Rule Id="CA5369" Action="Warning" /> <!-- Use XmlReader For Deserialize -->
    <Rule Id="CA5370" Action="Warning" /> <!-- Use XmlReader For Validate -->
    <Rule Id="CA5371" Action="Warning" /> <!-- Use XmlReader For ReadXmlSchema -->
    <Rule Id="CA5372" Action="Warning" /> <!-- Use XmlReader For XPathDocument -->
    <Rule Id="CA5373" Action="Warning" /> <!-- Do not use obsolete key derivation function -->
    <Rule Id="CA5374" Action="Warning" /> <!-- Do Not Use XslTransform -->
    <Rule Id="CA5375" Action="Warning" /> <!-- Do Not Use Account Shared Access Signature -->
    <Rule Id="CA5376" Action="Warning" /> <!-- Use SharedAccessProtocol HttpsOnly -->
    <Rule Id="CA5377" Action="Warning" /> <!-- Use Container Level Access Policy -->
    <Rule Id="CA5378" Action="Warning" /> <!-- Do not disable ServicePointManagerSecurityProtocols -->
    <Rule Id="CA5379" Action="Warning" /> <!-- Do Not Use Weak Key Derivation Function Algorithm -->
    <Rule Id="CA5380" Action="Warning" /> <!-- Do Not Add Certificates To Root Store -->
    <Rule Id="CA5381" Action="Warning" /> <!-- Ensure Certificates Are Not Added To Root Store -->
    <Rule Id="CA5382" Action="Warning" /> <!-- Use Secure Cookies In ASP.Net Core -->
    <Rule Id="CA5383" Action="Warning" /> <!-- Ensure Use Secure Cookies In ASP.Net Core -->
    <Rule Id="CA5384" Action="Warning" /> <!-- Do Not Use Digital Signature Algorithm (DSA) -->
    <Rule Id="CA5385" Action="Warning" /> <!-- Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size -->
    <Rule Id="CA5386" Action="Warning" /> <!-- Avoid hardcoding SecurityProtocolType value -->
    <Rule Id="CA5387" Action="Warning" /> <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count -->
    <Rule Id="CA5388" Action="Warning" /> <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function -->
    <Rule Id="CA5389" Action="Warning" /> <!-- Do Not Add Archive Item's Path To The Target File System Path -->
    <Rule Id="CA5390" Action="Warning" /> <!-- Do not hard-code encryption key -->
    <Rule Id="CA5391" Action="Warning" /> <!-- Use antiforgery tokens in ASP.NET Core MVC controllers -->
    <Rule Id="CA5392" Action="Warning" /> <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes -->
    <Rule Id="CA5393" Action="Warning" /> <!-- Do not use unsafe DllImportSearchPath value -->
    <Rule Id="CA5394" Action="Warning" /> <!-- Do not use insecure randomness -->
    <Rule Id="CA5395" Action="Warning" /> <!-- HttpVerb attribute should be used with HttpMethodAttribute -->
    <Rule Id="CA5396" Action="Warning" /> <!-- Set HttpOnly to true for HttpCookie -->
    <Rule Id="CA5397" Action="Warning" /> <!-- Do not use deprecated SslProtocols values -->
    <Rule Id="CA5398" Action="Warning" /> <!-- Avoid hardcoded SslProtocols values -->
    <Rule Id="CA5399" Action="Warning" /> <!-- Definitely disable HttpClient certificate revocation list check -->
    <Rule Id="CA5400" Action="Warning" /> <!-- Ensure HttpClient certificate revocation list check is not disabled -->
    <Rule Id="CA5401" Action="Warning" /> <!-- Do not use CreateEncryptor with non-default IV -->
    <Rule Id="CA5402" Action="Warning" /> <!-- Use CreateEncryptor with default IV -->
    <Rule Id="CA5403" Action="Warning" /> <!-- Do not hard-code certificate -->
  </Rules>

  <!-- SonarAnalyzer.CSharp Rules -->
  <Rules AnalyzerId="SonarAnalyzer.CSharp" RuleNamespace="SonarAnalyzer.CSharp">
    <!-- Security Hotspots -->
    <Rule Id="S2076" Action="Warning" /> <!-- OS commands should not be vulnerable to command injection -->
    <Rule Id="S2083" Action="Warning" /> <!-- Deserialization should not be vulnerable to injection attacks -->
    <Rule Id="S2696" Action="Warning" /> <!-- Instance methods should not write to static fields -->
    <Rule Id="S3649" Action="Warning" /> <!-- Content Security Policy (CSP) should be configured -->
    <Rule Id="S4423" Action="Warning" /> <!-- Weak SSL/TLS protocols should not be used -->
    <Rule Id="S4502" Action="Warning" /> <!-- Disabling certificate validation is security-sensitive -->
    <Rule Id="S4507" Action="Warning" /> <!-- LDAP authentication should be protected against injection attacks -->
    <Rule Id="S4790" Action="Warning" /> <!-- XML parsing should not be vulnerable to XXE attacks -->
    <Rule Id="S4792" Action="Warning" /> <!-- Zip Slip vulnerability should be addressed -->
    <Rule Id="S4818" Action="Warning" /> <!-- Regular expressions should not be vulnerable to Denial of Service attacks -->
    <Rule Id="S4830" Action="Warning" /> <!-- Server certificates should be verified during SSL/TLS connections -->
    <Rule Id="S5042" Action="Warning" /> <!-- Exception and StackTrace information should not be exposed -->
    <Rule Id="S5131" Action="Warning" /> <!-- Server-Side Request Forgery (SSRF) vulnerabilities should be avoided -->
    <Rule Id="S5144" Action="Warning" /> <!-- Using insecure temporary file creation methods is security-sensitive -->
    <Rule Id="S5145" Action="Warning" /> <!-- File uploads should be restricted -->
    <Rule Id="S5146" Action="Warning" /> <!-- HTTP response headers should be hardened -->
    <Rule Id="S5167" Action="Warning" /> <!-- Sections of code should not be commented out -->
    <Rule Id="S5334" Action="Warning" /> <!-- Using cookies without the HttpOnly flag is security-sensitive -->
    <Rule Id="S5542" Action="Warning" /> <!-- Using weak hashing algorithms is security-sensitive -->
    <Rule Id="S5547" Action="Warning" /> <!-- Using insecure XML DTD processing is security-sensitive -->
    <Rule Id="S5659" Action="Warning" /> <!-- Using insecure pseudo-random number generators is security-sensitive -->
    <Rule Id="S5693" Action="Warning" /> <!-- Using insecure SSL/TLS ciphers is security-sensitive -->
    <Rule Id="S5753" Action="Warning" /> <!-- Using insecure path handling is security-sensitive -->
    <Rule Id="S5766" Action="Warning" /> <!-- Using insecure deserialization is security-sensitive -->
    <Rule Id="S5852" Action="Warning" /> <!-- Using insecure regular expression is security-sensitive -->
    <Rule Id="S6096" Action="Warning" /> <!-- Using insecure HTTP methods is security-sensitive -->
  </Rules>

  <!-- SecurityCodeScan.VS2019 Rules -->
  <Rules AnalyzerId="SecurityCodeScan.VS2019" RuleNamespace="SecurityCodeScan.VS2019">
    <Rule Id="SCS0001" Action="Warning" /> <!-- Potential XSS vulnerability -->
    <Rule Id="SCS0002" Action="Warning" /> <!-- Potential SQL Injection vulnerability -->
    <Rule Id="SCS0003" Action="Warning" /> <!-- Potential Path Traversal vulnerability -->
    <Rule Id="SCS0004" Action="Warning" /> <!-- Potential Command Injection vulnerability -->
    <Rule Id="SCS0005" Action="Warning" /> <!-- Potential LDAP Injection vulnerability -->
    <Rule Id="SCS0006" Action="Warning" /> <!-- Potential XPath Injection vulnerability -->
    <Rule Id="SCS0007" Action="Warning" /> <!-- Potential XXE vulnerability -->
    <Rule Id="SCS0008" Action="Warning" /> <!-- Potential Open Redirect vulnerability -->
    <Rule Id="SCS0009" Action="Warning" /> <!-- Potential Insecure Deserialization vulnerability -->
    <Rule Id="SCS0010" Action="Warning" /> <!-- Potential Insecure Randomness vulnerability -->
    <Rule Id="SCS0011" Action="Warning" /> <!-- Potential Weak Hashing Algorithm vulnerability -->
    <Rule Id="SCS0012" Action="Warning" /> <!-- Potential Weak Encryption Algorithm vulnerability -->
    <Rule Id="SCS0013" Action="Warning" /> <!-- Potential Hardcoded Secret vulnerability -->
    <Rule Id="SCS0014" Action="Warning" /> <!-- Potential Insecure Cookie vulnerability -->
    <Rule Id="SCS0015" Action="Warning" /> <!-- Potential Insecure File Permissions vulnerability -->
    <Rule Id="SCS0016" Action="Warning" /> <!-- Potential Insecure Temporary File vulnerability -->
    <Rule Id="SCS0017" Action="Warning" /> <!-- Potential Insecure SSL/TLS Configuration vulnerability -->
    <Rule Id="SCS0018" Action="Warning" /> <!-- Potential Information Exposure vulnerability -->
    <Rule Id="SCS0019" Action="Warning" /> <!-- Potential Use of Deprecated Cryptographic API vulnerability -->
    <Rule Id="SCS0020" Action="Warning" /> <!-- Potential Insecure Data Storage vulnerability -->
    <Rule Id="SCS0021" Action="Warning" /> <!-- Potential Insecure Data Transmission vulnerability -->
    <Rule Id="SCS0022" Action="Warning" /> <!-- Potential Insecure Authentication vulnerability -->
    <Rule Id="SCS0023" Action="Warning" /> <!-- Potential Insecure Authorization vulnerability -->
    <Rule Id="SCS0024" Action="Warning" /> <!-- Potential Insecure Session Management vulnerability -->
    <Rule Id="SCS0025" Action="Warning" /> <!-- Potential Insecure Input Validation vulnerability -->
    <Rule Id="SCS0026" Action="Warning" /> <!-- Potential Insecure Output Encoding vulnerability -->
    <Rule Id="SCS0027" Action="Warning" /> <!-- Potential Insecure Error Handling vulnerability -->
    <Rule Id="SCS0028" Action="Warning" /> <!-- Potential Insecure Logging vulnerability -->
    <Rule Id="SCS0029" Action="Warning" /> <!-- Potential Insecure Configuration vulnerability -->
    <Rule Id="SCS0030" Action="Warning" /> <!-- Potential Insecure Third-Party Component vulnerability -->
    <Rule Id="SCS0031" Action="Warning" /> <!-- Potential Insecure API Usage vulnerability -->
    <Rule Id="SCS0032" Action="Warning" /> <!-- Potential Insecure Code Quality vulnerability -->
    <Rule Id="SCS0033" Action="Warning" /> <!-- Potential Insecure Business Logic vulnerability -->
    <Rule Id="SCS0034" Action="Warning" /> <!-- Potential Insecure Mobile Code vulnerability -->
    <Rule Id="SCS0035" Action="Warning" /> <!-- Potential Insecure Cloud Configuration vulnerability -->
    <Rule Id="SCS0036" Action="Warning" /> <!-- Potential Insecure Container Configuration vulnerability -->
    <Rule Id="SCS0037" Action="Warning" /> <!-- Potential Insecure Infrastructure as Code vulnerability -->
    <Rule Id="SCS0038" Action="Warning" /> <!-- Potential Insecure Serverless Configuration vulnerability -->
  </Rules>
</RuleSet>
